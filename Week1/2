#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
typedef long long int ll;
typedef vector<vector<int>> graph;
const ll maxn= (ll) 1e5+9;


graph adj(maxn);

int dfs(int r){
    if(adj[r].size()==0) return 1;
    else{
        int maxv=0;
        for(int i=0; i<adj[r].size(); i++){
            int j=adj[r][i];
            maxv=max(maxv, dfs(j));
        }
        return 1+maxv;
    }
}


int main() {
    
    long long int i,j,k,t,q,m,l,n;
    cin>>n;
    int p[n];
    int r;
    for(int i=0; i<n; i++){
    cin>>p[i];
    if(p[i]==-1) r=i;
    else adj[p[i]].push_back(i);
    }

    cout<<dfs(r)<<endl;
}
