#include<iostream>
#include<stack>
#include<stdio.h>
#include<array>
#include<string>
using namespace std;


struct Bracket {
    Bracket(char type, int position):
    type(type),
    position(position)
    {}
    
    bool Match(char c){
    if(type == '[' && c == ']')
        return true;
    if(type == '(' && c == ')')
        return true;
    if(type == '{' && c == '}')
        return true;
    return false;
    }   
    
    char type;
    int position;
};

int main() {
    std::string text;
    getline(std::cin, text);
    long long int len= sizeof(text)/sizeof(char);

    std::stack <Bracket> s;
    long long int t=-1;
    for(long long int i=0; i<len; i++){
        
        
      if(text[i]=='['||text[i]=='{'||text[i]=='(')
       { Bracket *b= new Bracket(text[i], i+1);
          s.push(*b);
        }
         
       if(text[i]==']' || text[i]== '}' || text[i]== ')'){
       if(s.size()==0) { t=i+1; break;}
       else if(s.top().Match(text[i])) s.pop();
       else {t=i+1; break;}
     }
    }
    if(s.size()==0 && t==-1 ) cout<<"Success";
    else cout<<t;
   }
